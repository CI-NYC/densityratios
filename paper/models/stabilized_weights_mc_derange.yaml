data_generating_process: dgp1_stabilized_weight

augmentation_params:
  function: augment_stabilized_weights
  kwargs:
    method: monte_carlo_derangment
    # Number of monte carlo draws is: n * multipler_monte_carlo
    multipler_monte_carlo: [1, 2, 5, 10, 20]

# Model parameters
kde:
  model: kde
  method: stabilized_weight

kliep:
  model: kernel
  method: KLIEP
  basis_dimensions: [100, 200, 500]
  bandwidths: [1.0, 2.0, 5.0, 10.0]
  num_iterations: 5000

ulsif:
  model: kernel
  method: uLSIF
  basis_dimensions: [100, 200, 500]
  bandwidths: [1.0, 2.0, 5.0, 10.0]
  smoothing_parameters: [0.0, 0.1, 0.5, 1.0]

nnet:
  model: nnet
  objective: ["least_squares", "kullback_leibler", "cross_entropy", "itakura_saito"]
  tuning: True
  depth: [2, 3]
  width: [20, 50]
  learning_rate: [1.0e-4]
  num_iterations: 1000
  early_stopping_round: 5
  batch_size: 125
  stabilized_weights: False

nnet_sw:
  model: nnet
  objective: ["least_squares", "kullback_leibler", "cross_entropy", "itakura_saito"]
  tuning: True
  depth: [2, 3]
  width: [20, 50]
  learning_rate: [1.0e-4]
  num_iterations: 1000
  early_stopping_round: 5
  batch_size: 125
  stabilized_weights: True
  stabilized_weights_derangement: True
  sampler_replacement: False

booster:
  model: lgb
  objective: ["least_squares", "kullback_leibler", "cross_entropy", "itakura_saito"]
  tuning: True
  max_leaves: [10, 20, 50]
  learning_rate: [1.0e-3, 1.0e-4]
  bagging_fraction: [0.8, null]
  bagging_freq: 1
  num_iterations: 1000
  force_col_wise: True
  early_stopping_round: 10
